name: GH-Pages

on:
  push:
    branches: [master]
  schedule:
    # Build the website twice a week, to keep it up-to-date
    # and keep the cache warm.
    # See https://crontab.guru/#0_5_*_*_0,4
    - cron: '0 5 * * 0,4'

jobs:
  build-and-deploy:
    if: contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Haskell toolchain
      uses: actions/setup-haskell@v1
      with:
        enable-stack: true
        stack-version: 'latest'

    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - uses: actions/cache@v1
      name: Cache Haskell build artifacts
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}

    - uses: actions/cache@v1
      name: Cache Python build artifacts
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ hashFiles('requirements.txt') }}

    - uses: actions/cache@v1
      name: Cache Rust build artifacts
      with:
        path: |
          tools/target
          ~/.cargo
        key: ${{ runner.os }}-${{ hashFiles('tools/Cargo.lock') }}

    - name: Build site compiler
      run: |
        stack install --fast
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy wheel
        pip install -r requirements.txt
        
    - name: Download Bulma CSS
      env:
        bulma-version: 0.9.1
      run: |
        wget -c https://github.com/jgthms/bulma/releases/download/${{ env.bulma-version }}/bulma-${{ env.bulma-version }}.zip 
        unzip bulma-${{ env.bulma-version }}.zip -d sass

    - name: Compile CSS from SCSS files
      uses: gha-utilities/sass-build@v0.2.5
      with:
        source: sass/style.scss
        destination: css/style.css
    
    - name: Generate banner
      run: |
        python scripts/mkbanner.py
    
    # Need to build twice because in the first build,
    # pandoc-plot creates files which are then routed
    # appropriately in the second build.
    - name: Build website
      run: |
        stack exec -- personal-website clean
        stack exec -- personal-website build
        stack exec -- personal-website build
  
    - name: Minify CSS and HTML
      run: |
        rustup update stable && rustup default stable
        cd tools 
        cargo build --bin minifier
        ./target/debug/minifier ../_rendered
        
    - name: Check internal links
      run: |
        stack exec -- personal-website check --internal-links

    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: _rendered
        CLEAN: true