# Generated by pandoc-plot 1.0.0.0
import matplotlib.pyplot as plt
import numpy as np

np.random.seed(2019)
# This example has been adapted from the scikit-image gallery item
# located here:
#   https://scikit-image.org/docs/stable/auto_examples/transform/plot_register_translation.html

from skimage import data
from skimage.feature import register_translation
from scipy.ndimage import fourier_shift

image = data.camera()
shift = (-50, 0)

# The shift corresponds to the pixel offset relative to the reference image
offset_image = fourier_shift(np.fft.fftn(image), shift)
offset_image = np.fft.ifftn(offset_image)

fig = plt.figure(figsize=(8, 3))
ax1 = plt.subplot(1, 3, 1)
ax2 = plt.subplot(1, 3, 2, sharex=ax1, sharey=ax1)
ax3 = plt.subplot(1, 3, 3)

ax1.imshow(image, cmap='gray')
ax1.set_axis_off()
ax1.set_title('Reference image')

ax2.imshow(offset_image.real, cmap='gray')
ax2.set_axis_off()
ax2.set_title('Offset image')

# Show the output of a cross-correlation to show what the algorithm is
# doing behind the scenes
image_product = np.fft.fft2(image) * np.fft.fft2(offset_image).conj()
cc_image = np.fft.fftshift(np.fft.ifft2(image_product))
ax3.imshow(cc_image.real, cmap='viridis')
ax3.set_axis_off()
ax3.set_title("Cross-correlation")